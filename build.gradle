buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
		jUnitVersion = '5.2.0'
		mockitoVersion = '2.18.3'
		postgresqlVersion = '9.4-1206-jdbc42'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'ar.test.meli'
version = '0.1.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-web'
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	compile("org.postgresql:postgresql:${postgresqlVersion}")

	testImplementation("org.junit.jupiter:junit-jupiter-api:${jUnitVersion}")
	testCompile("org.junit.jupiter:junit-jupiter-params:${jUnitVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${jUnitVersion}")
	testCompile "org.mockito:mockito-core:2.+"
	testCompile("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

check.dependsOn jacocoTestReport